@startuml
title Процесс оформления заказа
footer OTUS. ДЗ №1

actor "Пользователь" as USER order 1

box "Система" #LightBlue
    participant "Фронт" as FRONT order 10
    participant "BFF" as BFF order 20
    participant "Сервиc доставки" as SERVICE_DELIVERY order 30
    participant "Сервиc заказа" as SERVICE_ORDER order 40
    participant "Сервиc корзины" as SERVICE_BASKET order 50
    participant "Сервис каталога" as SERVICE_CATALOGUE order 60
    participant "Сервиc платежей" as SERVICE_INVOICE order 70
    participant "Сервиc уведомлений" as SERVICE_NOTIFICATION order 80
    participant "Сервиc склада" as SERVICE_WAREHOUSE order 90
end box

note over FRONT, BFF
<b>Предусловие:</b> Пользователь аутентифицирован
end note

== Поиск товара ==

USER -> FRONT : Находит группу товаров в каталоге
FRONT -[#blue]> BFF ++ : Отправляет запрос\n<b>[sync]
BFF -[#blue]> SERVICE_CATALOGUE ++: Вызывает API каталога\n<b>[sync]
SERVICE_CATALOGUE --> BFF -- : Отвечает
BFF -> BFF : Кеширует результаты
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат

== Формирование корзины ==

USER -> FRONT : Кладет нужный товар в корзину
FRONT -[#blue]> BFF ++ : Отправляет запрос\n<b>[sync]
BFF -[#blue]> SERVICE_BASKET ++: Вызывает API помещения товара в корзину\n<b>[sync]
SERVICE_BASKET -[#blue]> SERVICE_CATALOGUE ++ : Вызывает API бронирования товара\n<b>[sync]
SERVICE_CATALOGUE --> SERVICE_BASKET --: Отвечает
SERVICE_BASKET --> BFF -- : Отвечает
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат

== Работа с заказом ==

USER -> FRONT : Оформляет заказ
FRONT -[#blue]> BFF ++ : Отправляет запрос\n<b>[sync]
BFF -[#blue]> SERVICE_ORDER ++: Вызывает API создания заказа\n<b>[sync]
SERVICE_ORDER -[#blue]> SERVICE_BASKET ++: Вызывает API корзины для получения позиций\n<b>[sync]
SERVICE_BASKET --> SERVICE_ORDER -- : Отвечает
SERVICE_ORDER --> BFF -- : Отвечает
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат

== Доставка ==

USER -> FRONT : Оформляет доставку
FRONT -[#blue]> BFF ++ : Отправляет запрос\n<b>[sync]
BFF -[#blue]> SERVICE_DELIVERY ++: Вызывает API запроса вариантов доставки\n<b>[sync]
SERVICE_DELIVERY --> BFF -- : Отвечает
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат

USER -> FRONT : Выбирает нужную доставку
FRONT -[#blue]> BFF ++ : Отправляет запрос\n<b>[sync]
BFF -[#blue]> SERVICE_DELIVERY ++: Вызывает API применения доставки\n<b>[sync]
SERVICE_DELIVERY -[#blue]> SERVICE_ORDER ++: Запрашивает данные о заказе\n<b>[sync]
SERVICE_ORDER --> SERVICE_DELIVERY -- : Отвечает
SERVICE_DELIVERY -[#blue]> SERVICE_ORDER ++: Обновляет статус заказа\n<b>[sync]
SERVICE_ORDER --> SERVICE_DELIVERY -- : Отвечает
SERVICE_DELIVERY --> BFF -- : Отвечает
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат

== Оплата, фиксация позиций ==

USER -> FRONT : Выбирает вид оплаты
FRONT -[#blue]> BFF ++ : Отправляет запрос\n<b>[sync]
BFF -[#blue]> SERVICE_INVOICE ++: Вызывает API создания инвойса\n<b>[sync]
SERVICE_INVOICE --> BFF -- : Отвечает
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат/редирект на систему оплаты
USER -> USER : Осуществляет оплату
FRONT -[#blue]> BFF ++ : Отправляет подтверждение платежа\n<b>[sync]
BFF -[#blue]> SERVICE_ORDER ++: Вызывает API обновления статуса заказа\n<b>[sync]
SERVICE_ORDER -[#green]> SERVICE_NOTIFICATION: Отправляет уведомление об оформлении заказа\n<b>[async]
SERVICE_ORDER --> BFF -- : Отвечает
BFF --> FRONT -- : Отвечает
FRONT --> USER : Отображает результат

== Синхронизация позиций ==

SERVICE_ORDER -[#green]> SERVICE_CATALOGUE : Отправляет сообщение для обновления позиций\n<b>[async]
SERVICE_CATALOGUE -[#green]> SERVICE_WAREHOUSE : Отправляет сообщение для обновления позиций\n<b>[async]


legend right
| Цвет | Характер взаимодействия |
|<#Blue>| Синхронный вызов |
|<#Green>| Асинхронное взаимодействие (сообщение/событие/команда)|
end legend

@enduml